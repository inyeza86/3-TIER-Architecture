pipeline {
    agent {
        label 'jenkins-node'
    }

    parameters {
        choice(
            name: 'ACTION',
            choices: ['apply', 'destroy'],
            description: 'Choose the action to perform: apply (default) or destroy'
        )
    }

    stages {
        stage('Checking SCM') {
            steps {
                git branch: 'main', url: 'https://github.com/inyeza86/3-TIER-Architecture.git'
            }
        }

        
       /* stage('Run checkov and tfsec security scan'){
            steps{
                dir('Terraform'){
                  //sh '/home/ubuntu/.checkov_env/bin/checkov -d . -o cli -o junitxml --output-file-path results.xml --soft-fail' 
                   // Run tfsec with JUnit XML output
                  sh 'tfsec . --format junit --out tfsec-results.xml || true'

                }
               
            }
        }*/

        /*stage('Archive Results') {
            steps {
                archiveArtifacts artifacts: 'tfsec-results.xml', allowEmptyArchive: true
            }
        }*/

        stage('Run trivy security scan'){
            steps{
                dir('Terraform'){ 
                    //Run trivy with JUnit XML output
                  sh 'trivy filesystem --severity CRITICAL,HIGH --exit-code 0 --no-progress . > trivy-results.txt'

                }
               
            }
        }

        stage('Archive Results') {
            steps {
                archiveArtifacts artifacts: 'trivy-results.txt', allowEmptyArchive: true
            }
        }
    

        stage('Setup Terraform') {
            steps {
                sh 'terraform -version'
            }
        }

        stage('Terraform Init') {
            steps {
                dir('Terraform') {
                    sh 'terraform init'
                }
            }
        }

        stage('Apply or Destroy') {
            when {
                expression { params.ACTION == 'apply' || params.ACTION == 'destroy' }
            }
            steps {
                script {
                    if (params.ACTION == 'apply') {
                        dir('Terraform') {
                            sh 'terraform validate'
                            sh 'terraform plan -no-color -input=false -out planfile'
                            sh 'terraform apply -auto-approve -input=false -parallelism=1 planfile'
                        }
                    } else if (params.ACTION == 'destroy') {
                        dir('Terraform') {
                            sh 'terraform destroy -auto-approve -input=false'
                        }
                    }
                }
            }
        }
     } 
}




     




